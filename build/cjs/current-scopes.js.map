{"version":3,"file":"current-scopes.js","sources":["../../src/current-scopes.ts"],"sourcesContent":["import { getGlobalSingleton } from \"./worldwide\";\nimport { Scope as ScopeClass } from \"./scope\";\nimport { Scope } from \"./index\";\nimport { getMainCarrier } from \"./carrier\";\nimport { getAsyncContextStrategy } from \"./async-context\";\nimport { Client } from \"./client\";\n\nexport function getDefaultCurrentScope(): Scope {\n    return getGlobalSingleton('defaultCurrentScope', () => new ScopeClass());\n}\n\nexport function getDefaultIsolationScope(): Scope {\n    return getGlobalSingleton('defaultIsolationScope', () => new ScopeClass());\n}\n\nexport function getClient<C extends Client>(): C | undefined {\n    return getCurrentScope().getClient<C>();\n}\n\nexport function getCurrentScope(): Scope {\n    const carrier = getMainCarrier();\n    const acs = getAsyncContextStrategy(carrier);\n    return acs.getCurrentScope();\n}\n\nexport function getIsolationScope(): Scope {\n    const carrier = getMainCarrier();\n    const acs = getAsyncContextStrategy(carrier);\n    return acs.getIsolationScope();\n};\n  \nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T;\n\nexport function withIsolationScope<T>(isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T): T;\n\nexport function withIsolationScope<T>(\n    ...rest:\n      | [callback: (isolationScope: Scope) => T]\n      | [isolationScope: Scope | undefined, callback: (isolationScope: Scope) => T]\n  ): T {\n    const carrier = getMainCarrier();\n    const acs = getAsyncContextStrategy(carrier);\n  \n    // If a scope is defined, we want to make this the active scope instead of the default one\n    if (rest.length === 2) {\n        const [isolationScope, callback] = rest;\n        \n        if (!isolationScope) {\n          return acs.withIsolationScope(callback);\n        }\n      \n        return acs.withSetIsolationScope(isolationScope, callback);\n    }\n  \n    return acs.withIsolationScope(rest[0]);\n}"],"names":["getGlobalSingleton","ScopeClass","carrier","getMainCarrier","getAsyncContextStrategy"],"mappings":";;;;;;;AAOO,SAAS,sBAAsB,GAAU;AAChD,IAAI,OAAOA,4BAAkB,CAAC,qBAAqB,EAAE,MAAM,IAAIC,WAAU,EAAE,CAAC,CAAA;AAC5E,CAAA;AACA;AACO,SAAS,wBAAwB,GAAU;AAClD,IAAI,OAAOD,4BAAkB,CAAC,uBAAuB,EAAE,MAAM,IAAIC,WAAU,EAAE,CAAC,CAAA;AAC9E,CAAA;AACA;AACO,SAAS,SAAS,GAAoC;AAC7D,IAAI,OAAO,eAAe,EAAE,CAAC,SAAS,EAAK,CAAA;AAC3C,CAAA;AACA;AACO,SAAS,eAAe,GAAU;AACzC,IAAI,MAAMC,SAAA,GAAUC,sBAAc,EAAE,CAAA;AACpC,IAAI,MAAM,GAAI,GAAEC,oCAAuB,CAACF,SAAO,CAAC,CAAA;AAChD,IAAI,OAAO,GAAG,CAAC,eAAe,EAAE,CAAA;AAChC,CAAA;AACA;AACO,SAAS,iBAAiB,GAAU;AAC3C,IAAI,MAAMA,SAAA,GAAUC,sBAAc,EAAE,CAAA;AACpC,IAAI,MAAM,GAAI,GAAEC,oCAAuB,CAACF,SAAO,CAAC,CAAA;AAChD,IAAI,OAAO,GAAG,CAAC,iBAAiB,EAAE,CAAA;AAClC;;;;;;;;"}