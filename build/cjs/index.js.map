{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { Client } from \"./client\";\nimport { getCurrentScope } from \"./current-scopes\";\nexport { init } from \"./init\";\nimport { RequestSession } from \"./session\";\nimport { EventHint } from \"./types\";\nimport { parseEventHintOrCaptureContext } from \"./utils/prepare-event\";\nimport { withRibbanConfig } from \"./config/withRibbanConfig\";\n\nexport type CaptureContext = Scope | Partial<ScopeContext> | ((scope: Scope) => Scope);\n\nexport type ExclusiveEventHintOrCaptureContext = \n    | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n    | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\nexport type Extra = unknown;\nexport type Extras = Record<string, Extra>;\n\nexport interface ScopeContext {\n    level: 'fatal' | 'error' | 'warning' | 'info' | 'debug';\n    extra: Extras;\n    tags: { [key: string]: string };\n    fingerprint: string[];\n    requestSession: RequestSession;\n};\n\nexport interface Scope {\n    addScopeListener(callback: (scope: Scope) => void): void;\n\n    setTags(tags: { [key: string]: string }): this;\n\n    setTag(key: string, value: string): this;\n\n    setExtras(extras: Extras): this;\n\n    setExtra(key: string, extra: Extra): this;\n\n    setLevel(level: 'fatal' | 'error' | 'warning' | 'info' | 'debug'): this;\n\n    clear(): this;\n\n    update(captureContext?: CaptureContext);\n\n    /**\n     * Returns the `RequestSession` if there is one\n     */\n    getRequestSession(): RequestSession | undefined;\n\n    /**\n     * Sets the `RequestSession` on the scope\n     */\n    setRequestSession(requestSession?: RequestSession): this;\n\n    captureException(exception: unknown, hint?: unknown): string;\n\n    getClient<C extends Client>(): C | undefined;\n\n    setClient(client: Client | undefined): void;\n\n    clone(): Scope;\n}\n\nexport function captureException(\n    exception: any,\n    hint?: ExclusiveEventHintOrCaptureContext,\n) {\n    console.log('We got exception', exception.message)\n    \n    return getCurrentScope().captureException(exception, parseEventHintOrCaptureContext(hint));\n}"],"names":["getCurrentScope","parseEventHintOrCaptureContext"],"mappings":";;;;;;;;;AA6DO,SAAS,gBAAgB;AAChC,IAAI,SAAS;AACb,IAAI,IAAI;AACR,EAAE;AACF,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,SAAS,CAAC,OAAO,EAAA;;AAErD,IAAI,OAAOA,6BAAe,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAEC,2CAA8B,CAAC,IAAI,CAAC,CAAC,CAAA;AAC9F;;;;"}