{"version":3,"file":"valueInjectionLoader.js","sources":["../../../../../../../src/config/loaders/valueInjectionLoader.ts"],"sourcesContent":["import { LoaderThis } from \"./types\";\r\n\r\ntype LoaderOptions = {\r\n    values: Record<string, unknown>;\r\n};\r\n\r\n/**\r\n * Set values on the global/window object at the start of a module.\r\n *\r\n * Options:\r\n *   - `values`: An object where the keys correspond to the keys of the global values to set and the values\r\n *        correspond to the values of the values on the global object. Values must be JSON serializable.\r\n */\r\nexport default function valueInjectionLoader(this: LoaderThis<LoaderOptions>, userCode: string): string {\r\n    // We know one or the other will be defined, depending on the version of webpack being used\r\n    const { values } = 'getOptions' in this ? this.getOptions() : this.query;\r\n\r\n    // We do not want to cache injected values across builds\r\n    this.cacheable(false);\r\n\r\n    // Define some global proxy that works on server and on the browser.\r\n    let injectedCode =\r\n        'var _sentryCollisionFreeGlobalObject = typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : {};\\n';\r\n\r\n    Object.entries(values).forEach(([key, value]) => {\r\n        injectedCode += `_sentryCollisionFreeGlobalObject[\"${key}\"] = ${JSON.stringify(value)};\\n`;\r\n    });\r\n\r\n    return `${injectedCode}\\n${userCode}`;\r\n}"],"names":[],"mappings":";;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,oBAAoB,EAAkC,QAAQ,EAAkB;AACxG;AACA,IAAI,MAAM,EAAE,MAAA,EAAS,GAAE,gBAAgB,IAAA,GAAO,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,CAAA;;AAE5E;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;;AAEzB;AACA,IAAI,IAAI,YAAa;AACrB,QAAQ,kKAAkK,CAAA;;AAE1K,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK;AACrD,QAAQ,gBAAgB,CAAC,kCAAkC,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAA;AAClG,KAAK,CAAC,CAAA;;AAEN,IAAI,OAAO,CAAC,EAAA,YAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AACA;;;;"}