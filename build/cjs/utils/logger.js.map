{"version":3,"file":"logger.js","sources":["../../../src/utils/logger.ts"],"sourcesContent":["import { GLOBAL_OBJ } from \"../worldwide\";\n\nexport type ConsoleLevel = 'debug' | 'info' | 'warn' | 'error' | 'log' | 'assert' | 'trace';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n    'debug',\n    'info',\n    'warn',\n    'error',\n    'log',\n    'assert',\n    'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\nexport const originalConsoleMethods: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n  \n\ninterface Logger extends LoggerConsoleMethods {\n    disable(): void;\n    enable(): void;\n    isEnabled(): boolean;\n}\n  \n/**\n * Temporarily disable Ribban console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n    if (!('console' in GLOBAL_OBJ)) {\n        return callback();\n    }\n  \n    const console = GLOBAL_OBJ.console as Console;\n    const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n  \n    const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n  \n    // Restore all wrapped console methods\n    wrappedLevels.forEach(level => {\n        const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n        wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n        console[level] = originalConsoleMethod;\n    });\n  \n    try {\n        return callback();\n    } finally {\n        // Revert restoration to wrapped state\n        wrappedLevels.forEach(level => {\n          console[level] = wrappedFuncs[level] as LoggerMethod;\n        });\n    }\n}\n\nfunction makeLogger(): Logger {\n    let enabled = false;\n    const logger: Partial<Logger> = {\n      enable: () => {\n        enabled = true;\n      },\n      disable: () => {\n        enabled = false;\n      },\n      isEnabled: () => enabled,\n    };\n  \n    CONSOLE_LEVELS.forEach(name => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        logger[name] = (...args: any[]) => {\n          if (enabled) {\n            consoleSandbox(() => {\n              GLOBAL_OBJ.console[name](`RIBBAN [${name}]:`, ...args);\n            });\n          }\n        };\n    });\n  \n    return logger as Logger;\n}\n  \nexport const logger = makeLogger();"],"names":["GLOBAL_OBJ"],"mappings":";;;;AAIO,MAAM,cAAc,GAA4B;AACvD,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,CAAE,EAAA;;MAKW,sBAAsB;;AAGnC,GAAI,GAAE;;AASN;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAI,QAAQ,EAAc;AACxD,IAAI,IAAI,EAAE,aAAaA,oBAAU,CAAC,EAAE;AACpC,QAAQ,OAAO,QAAQ,EAAE,CAAA;AACzB,KAAI;;AAEJ,IAAI,MAAM,OAAA,GAAUA,oBAAU,CAAC,OAAQ,EAAA;AACvC,IAAI,MAAM,YAAY,GAAkC,EAAE,CAAA;;AAE1D,IAAI,MAAM,gBAAgB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAE,EAAA;;AAE9D;AACA,IAAI,aAAa,CAAC,OAAO,CAAC,SAAS;AACnC,QAAQ,MAAM,qBAAsB,GAAE,sBAAsB,CAAC,KAAK,CAAE,EAAA;AACpE,QAAQ,YAAY,CAAC,KAAK,CAAA,GAAI,OAAO,CAAC,KAAK,CAAE,EAAA;AAC7C,QAAQ,OAAO,CAAC,KAAK,CAAA,GAAI,qBAAqB,CAAA;AAC9C,KAAK,CAAC,CAAA;;AAEN,IAAI,IAAI;AACR,QAAQ,OAAO,QAAQ,EAAE,CAAA;AACzB,cAAc;AACd;AACA,QAAQ,aAAa,CAAC,OAAO,CAAC,SAAS;AACvC,UAAU,OAAO,CAAC,KAAK,CAAA,GAAI,YAAY,CAAC,KAAK,CAAE,EAAA;AAC/C,SAAS,CAAC,CAAA;AACV,KAAI;AACJ,CAAA;AACA;AACA,SAAS,UAAU,GAAW;AAC9B,IAAI,IAAI,OAAQ,GAAE,KAAK,CAAA;AACvB,IAAI,MAAM,MAAM,GAAoB;AACpC,MAAM,MAAM,EAAE,MAAM;AACpB,QAAQ,OAAA,GAAU,IAAI,CAAA;AACtB,OAAO;AACP,MAAM,OAAO,EAAE,MAAM;AACrB,QAAQ,OAAA,GAAU,KAAK,CAAA;AACvB,OAAO;AACP,MAAM,SAAS,EAAE,MAAM,OAAO;AAC9B,KAAK,CAAA;;AAEL,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ;AACnC;AACA,QAAQ,MAAM,CAAC,IAAI,CAAA,GAAI,CAAC,GAAG,IAAI,KAAY;AAC3C,UAAU,IAAI,OAAO,EAAE;AACvB,YAAY,cAAc,CAAC,MAAM;AACjC,cAAcA,oBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAA;AACpE,aAAa,CAAC,CAAA;AACd,WAAU;AACV,SAAS,CAAA;AACT,KAAK,CAAC,CAAA;;AAEN,IAAI,OAAO,MAAO,EAAA;AAClB,CAAA;;AAEa,MAAA,MAAA,GAAS,UAAU;;;;;;;"}