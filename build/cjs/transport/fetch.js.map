{"version":3,"file":"fetch.js","sources":["../../../src/transport/fetch.ts"],"sourcesContent":["import { BrowserTransportOptions } from \"../client\";\r\nimport { Transport, TransportMakeRequestResponse, TransportRequest } from \"../transport\";\r\nimport { createTransport } from \"./base\";\r\nimport { rejectedSyncPromise } from \"./syncpromise\";\r\nimport { FetchImpl, clearCachedFetchImplementation, getNativeFetchImplementation } from \"./utils\";\r\n\r\nexport function makeFetchTransport(\r\n    options: BrowserTransportOptions,\r\n    nativeFetch: FetchImpl | undefined = getNativeFetchImplementation(),\r\n): Transport {\r\n    let pendingBodySize = 0;\r\n    let pendingCount = 0;\r\n  \r\n    function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\r\n        const requestSize = request.body.length;\r\n        pendingBodySize += requestSize;\r\n        pendingCount++;\r\n        \r\n        const requestOptions: RequestInit = {\r\n            body: request.body,\r\n            method: 'POST',\r\n            headers: options.headers,\r\n            // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\r\n            // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\r\n            // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\r\n            // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\r\n            // Gotchas:\r\n            // - `keepalive` isn't supported by Firefox\r\n            // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\r\n            //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\r\n            //   We will therefore only activate the flag when we're below that limit.\r\n            // There is also a limit of requests that can be open at the same time, so we also limit this to 15\r\n            keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\r\n            ...options.fetchOptions,\r\n        };\r\n      \r\n        if (!nativeFetch) {\r\n            clearCachedFetchImplementation();\r\n            return rejectedSyncPromise('No fetch implementation available');\r\n        }\r\n      \r\n        try {\r\n            return nativeFetch(options.url, requestOptions).then(response => {\r\n                pendingBodySize -= requestSize;\r\n                pendingCount--;\r\n                return {\r\n                    statusCode: response.status,\r\n                    headers: {\r\n                        'x-ribban-rate-limits': response.headers.get('X-Ribban-Rate-Limits'),\r\n                        'retry-after': response.headers.get('Retry-After'),\r\n                    },\r\n                };\r\n            });\r\n        } catch (e) {\r\n            clearCachedFetchImplementation();\r\n            pendingBodySize -= requestSize;\r\n            pendingCount--;\r\n            return rejectedSyncPromise(e);\r\n        }\r\n    }\r\n  \r\n    return createTransport(options, makeRequest);\r\n}"],"names":["getNativeFetchImplementation","clearCachedFetchImplementation","rejectedSyncPromise","createTransport"],"mappings":";;;;;;AAMO,SAAS,kBAAkB;AAClC,IAAI,OAAO;AACX,IAAI,WAAW,GAA0BA,kCAA4B,EAAE;AACvE,EAAa;AACb,IAAI,IAAI,eAAgB,GAAE,CAAC,CAAA;AAC3B,IAAI,IAAI,YAAa,GAAE,CAAC,CAAA;;AAExB,IAAI,SAAS,WAAW,CAAC,OAAO,EAA+D;AAC/F,QAAQ,MAAM,WAAY,GAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAA;AAC/C,QAAQ,eAAA,IAAmB,WAAW,CAAA;AACtC,QAAQ,YAAY,EAAE,CAAA;;AAEtB,QAAQ,MAAM,cAAc,GAAgB;AAC5C,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,YAAY,MAAM,EAAE,MAAM;AAC1B,YAAY,OAAO,EAAE,OAAO,CAAC,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS,EAAE,eAAgB,IAAG,SAAU,YAAA,GAAe,EAAE;AACrE,YAAY,GAAG,OAAO,CAAC,YAAY;AACnC,SAAS,CAAA;;AAET,QAAQ,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAYC,oCAA8B,EAAE,CAAA;AAC5C,YAAY,OAAOC,+BAAmB,CAAC,mCAAmC,CAAC,CAAA;AAC3E,SAAQ;;AAER,QAAQ,IAAI;AACZ,YAAY,OAAO,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,YAAY;AAC7E,gBAAgB,eAAA,IAAmB,WAAW,CAAA;AAC9C,gBAAgB,YAAY,EAAE,CAAA;AAC9B,gBAAgB,OAAO;AACvB,oBAAoB,UAAU,EAAE,QAAQ,CAAC,MAAM;AAC/C,oBAAoB,OAAO,EAAE;AAC7B,wBAAwB,sBAAsB,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;AAC5F,wBAAwB,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;AAC1E,qBAAqB;AACrB,iBAAiB,CAAA;AACjB,aAAa,CAAC,CAAA;AACd,SAAU,CAAA,OAAO,CAAC,EAAE;AACpB,YAAYD,oCAA8B,EAAE,CAAA;AAC5C,YAAY,eAAA,IAAmB,WAAW,CAAA;AAC1C,YAAY,YAAY,EAAE,CAAA;AAC1B,YAAY,OAAOC,+BAAmB,CAAC,CAAC,CAAC,CAAA;AACzC,SAAQ;AACR,KAAI;;AAEJ,IAAI,OAAOC,oBAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;AAChD;;;;"}