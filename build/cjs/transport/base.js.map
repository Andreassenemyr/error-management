{"version":3,"file":"base.js","sources":["../../../src/transport/base.ts"],"sourcesContent":["import { createEnvelope, serializeEnvelope } from \"../envelope\";\r\nimport { InternalBaseTransportOptions, Transport, TransportMakeRequestResponse, TransportRequestExecutor } from \"../transport\";\r\nimport { Envelope, EnvelopeItem, EnvelopeItemType, Event, EventItem } from \"../types\";\r\nimport { RibbanError } from \"../utils/error\";\r\nimport { logger } from \"../utils/logger\";\r\nimport { PromiseBuffer, makePromiseBuffer } from \"./promisebuffer\";\r\nimport { resolvedSyncPromise } from \"./syncpromise\";\r\n\r\nexport type RateLimits = Record<string, string>;\r\n\r\nexport function createTransport(\r\n    options: InternalBaseTransportOptions,\r\n    makeRequest: TransportRequestExecutor,\r\n    buffer: PromiseBuffer<TransportMakeRequestResponse> = makePromiseBuffer(\r\n        options.bufferSize || 64\r\n    ),\r\n): Transport {\r\n    let rateLimits: RateLimits = {};\r\n    const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\r\n\r\n    function send(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\r\n        const filteredEnvelopeItems: EnvelopeItem[] = [];\r\n\r\n        forEachEnvelopeItem(envelope, (item, type) => {\r\n            filteredEnvelopeItems.push(item);\r\n        });\r\n\r\n        if (filteredEnvelopeItems.length == 0) {\r\n            return resolvedSyncPromise({});\r\n        }\r\n\r\n        const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\r\n\r\n        const recordEnvelopeLoss = (reason: 'before_send' | 'event_processor' | 'network_error' | 'queue_overflow'): void => {\r\n            forEachEnvelopeItem(filteredEnvelope, (item, type) => {\r\n                const event: Event | undefined = getEventForEnvelopeItem(item, type);\r\n                \r\n            })\r\n        };\r\n\r\n        const requestTask = (): PromiseLike<TransportMakeRequestResponse> => \r\n            makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\r\n                response => {\r\n                    if (response.statusCode !== undefined && (response.statusCode < 200 && response.statusCode >= 300)) {\r\n                        console.warn(`Ribban responded with status code ${response.statusCode} to sent event.`);\r\n                    }\r\n                    \r\n                    return response;\r\n                },\r\n                error => {\r\n                    recordEnvelopeLoss('network_error');\r\n                    throw error;\r\n                }\r\n            )\r\n\r\n        return buffer.add(requestTask).then(\r\n            result => result,\r\n            error => {\r\n                if (error instanceof RibbanError) {\r\n                    logger.warn('Skipped sending event because buffer is full.');\r\n                    recordEnvelopeLoss('queue_overflow');\r\n                    return resolvedSyncPromise({});\r\n                } else {\r\n                    throw error;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return {\r\n        send: send,\r\n        flush: flush,\r\n    }\r\n}\r\n\r\nexport function forEachEnvelopeItem<E extends Envelope>(\r\n    envelope: Envelope,\r\n    callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\r\n  ): boolean {\r\n    const envelopeItems = envelope[1];\r\n  \r\n    for (const envelopeItem of envelopeItems) {\r\n      const envelopeItemType = envelopeItem[0].type;\r\n      const result = callback(envelopeItem, envelopeItemType);\r\n  \r\n      if (result) {\r\n        return true;\r\n      }\r\n    }\r\n  \r\n    return false;\r\n}\r\n  \r\n\r\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\r\n    if (type !== 'event' && type !== 'transaction') {\r\n      return undefined;\r\n    }\r\n  \r\n    return Array.isArray(item) ? (item as EventItem)[1] : undefined;\r\n}"],"names":["makePromiseBuffer","envelope","resolvedSyncPromise","createEnvelope","serializeEnvelope","error","RibbanError","logger"],"mappings":"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"}