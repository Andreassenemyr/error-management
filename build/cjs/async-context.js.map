{"version":3,"file":"async-context.js","sources":["../../src/async-context.ts"],"sourcesContent":["import { Scope } from \"./index\";\r\nimport { Carrier, getMainCarrier, getRibbanCarrier } from \"./carrier\";\r\nimport { Client } from \"./client\";\r\nimport { getDefaultCurrentScope, getDefaultIsolationScope } from \"./current-scopes\";\r\nimport { Scope as ScopeClass } from \"./scope\"; \r\nimport { isThenable } from \"./transport/syncpromise\";\r\n\r\nexport interface AsyncContextStrategy {\r\n    /**\r\n     * Fork the isolation scope inside of the provided callback.\r\n     */\r\n    withIsolationScope: <T>(callback: (isolationScope: Scope) => T) => T;\r\n  \r\n    /**\r\n     * Fork the current scope inside of the provided callback.\r\n     */\r\n    withScope: <T>(callback: (isolationScope: Scope) => T) => T;\r\n  \r\n    /**\r\n     * Set the provided scope as the current scope inside of the provided callback.\r\n     */\r\n    withSetScope: <T>(scope: Scope, callback: (scope: Scope) => T) => T;\r\n  \r\n    /**\r\n     * Set the provided isolation as the current isolation scope inside of the provided callback.\r\n     */\r\n    withSetIsolationScope: <T>(isolationScope: Scope, callback: (isolationScope: Scope) => T) => T;\r\n  \r\n    /**\r\n     * Get the currently active scope.\r\n     */\r\n    getCurrentScope: () => Scope;\r\n  \r\n    /**\r\n     * Get the currently active isolation scope.\r\n     */\r\n    getIsolationScope: () => Scope;\r\n\r\n}\r\n\r\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\r\n    // Get main carrier (global for every environment)\r\n    const registry = getMainCarrier();\r\n    const ribbanCarrier = getRibbanCarrier(registry);\r\n    ribbanCarrier.acs = strategy;\r\n}\r\n\r\ninterface Layer {\r\n    client?: Client;\r\n    scope: Scope;\r\n}\r\n  \r\n  /**\r\n   * Get the current async context strategy.\r\n   * If none has been setup, the default will be used.\r\n   */\r\nexport function getAsyncContextStrategy(carrier: Carrier): AsyncContextStrategy {\r\n    const ribban = getRibbanCarrier(carrier);\r\n  \r\n    if (ribban.acs) {\r\n      return ribban.acs;\r\n    }\r\n  \r\n    // Otherwise, use the default one (stack)\r\n    return getStackAsyncContextStrategy();\r\n}\r\n\r\nexport class AsyncContextStack {\r\n    private readonly _stack: Layer[];\r\n    private _isolationScope: Scope;\r\n  \r\n    public constructor(scope?: Scope, isolationScope?: Scope) {\r\n      let assignedScope;\r\n      if (!scope) {\r\n        assignedScope = new ScopeClass();\r\n      } else {\r\n        assignedScope = scope;\r\n      }\r\n  \r\n      let assignedIsolationScope;\r\n      if (!isolationScope) {\r\n        assignedIsolationScope = new ScopeClass();\r\n      } else {\r\n        assignedIsolationScope = isolationScope;\r\n      }\r\n  \r\n      this._stack = [{ scope: assignedScope }];\r\n      this._isolationScope = assignedIsolationScope;\r\n    }\r\n  \r\n    /**\r\n     * Fork a scope for the stack.\r\n     */\r\n    public withScope<T>(callback: (scope: Scope) => T): T {\r\n      const scope = this._pushScope();\r\n  \r\n      let maybePromiseResult: T;\r\n      try {\r\n        maybePromiseResult = callback(scope);\r\n      } catch (e) {\r\n        this._popScope();\r\n        throw e;\r\n      }\r\n  \r\n      if (isThenable(maybePromiseResult)) {\r\n        // @ts-expect-error - isThenable returns the wrong type\r\n        return maybePromiseResult.then(\r\n          res => {\r\n            this._popScope();\r\n            return res;\r\n          },\r\n          e => {\r\n            this._popScope();\r\n            throw e;\r\n          },\r\n        );\r\n      }\r\n  \r\n      this._popScope();\r\n      return maybePromiseResult;\r\n    }\r\n  \r\n    /**\r\n     * Get the client of the stack.\r\n     */\r\n    public getClient<C extends Client>(): C | undefined {\r\n      return this.getStackTop().client as C;\r\n    }\r\n  \r\n    /**\r\n     * Returns the scope of the top stack.\r\n     */\r\n    public getScope(): Scope {\r\n      return this.getStackTop().scope;\r\n    }\r\n  \r\n    /**\r\n     * Get the isolation scope for the stack.\r\n     */\r\n    public getIsolationScope(): Scope {\r\n      return this._isolationScope;\r\n    }\r\n  \r\n    /**\r\n     * Returns the scope stack for domains or the process.\r\n     */\r\n    public getStack(): Layer[] {\r\n      return this._stack;\r\n    }\r\n  \r\n    /**\r\n     * Returns the topmost scope layer in the order domain > local > process.\r\n     */\r\n    public getStackTop(): Layer {\r\n      return this._stack[this._stack.length - 1];\r\n    }\r\n  \r\n    /**\r\n     * Push a scope to the stack.\r\n     */\r\n    private _pushScope(): Scope {\r\n      // We want to clone the content of prev scope\r\n      const scope = this.getScope().clone();\r\n      this.getStack().push({\r\n        client: this.getClient(),\r\n        scope,\r\n      });\r\n      return scope;\r\n    }\r\n  \r\n    /**\r\n     * Pop a scope from the stack.\r\n     */\r\n    private _popScope(): boolean {\r\n      if (this.getStack().length <= 1) return false;\r\n      return !!this.getStack().pop();\r\n    }\r\n}\r\n\r\nfunction getAsyncContextStack(): AsyncContextStack {\r\n    const registry = getMainCarrier();\r\n  \r\n    // For now we continue to keep this as `hub` on the ACS,\r\n    // as e.g. the Loader Script relies on this.\r\n    // Eventually we may change this if/when we update the loader to not require this field anymore\r\n    // Related, we also write to `hub` in {@link ./../sdk.ts registerClientOnGlobalHub}\r\n    const ribban = getRibbanCarrier(registry) as { hub?: AsyncContextStack };\r\n  \r\n    if (ribban.hub) {\r\n      return ribban.hub;\r\n    }\r\n  \r\n    ribban.hub = new AsyncContextStack(getDefaultCurrentScope(), getDefaultIsolationScope());\r\n    return ribban.hub;\r\n}\r\n\r\nfunction withScope<T>(callback: (scope: Scope) => T): T {\r\n    return getAsyncContextStack().withScope(callback);\r\n}\r\n  \r\nfunction withSetScope<T>(scope: Scope, callback: (scope: Scope) => T): T {\r\n    const hub = getAsyncContextStack() as AsyncContextStack;\r\n    return hub.withScope(() => {\r\n      hub.getStackTop().scope = scope;\r\n      return callback(scope);\r\n    });\r\n}\r\n\r\nfunction withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\r\n    return getAsyncContextStack().withScope(() => {\r\n        return callback(getAsyncContextStack().getIsolationScope());\r\n    });\r\n} \r\n  \r\n\r\nexport function getStackAsyncContextStrategy(): AsyncContextStrategy {\r\n    return {\r\n        withIsolationScope,\r\n        withScope,\r\n        withSetScope,\r\n        withSetIsolationScope: <T>(_isolationScope: Scope, callback: (isolationScope: Scope) => T) => {\r\n          return withIsolationScope(callback);\r\n        },\r\n        getCurrentScope: () => getAsyncContextStack().getScope(),\r\n        getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\r\n    };\r\n}"],"names":["carrier","getRibbanCarrier","scope","ScopeClass","isThenable","getMainCarrier","getDefaultCurrentScope","getDefaultIsolationScope"],"mappings":"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"}