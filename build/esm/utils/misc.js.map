{"version":3,"file":"misc.js","sources":["../../../src/utils/misc.ts"],"sourcesContent":["import { Event } from \"../types\";\r\nimport { Exception } from \"../types/exception\";\r\nimport { Mechanism } from \"../types/mechanism\";\r\nimport { logger } from \"./logger\";\r\nimport { addNonEnumerableProperty, isRegExp, isString } from \"./object\";\r\n\r\nexport function checkOrSetAlreadyCaught(exception: unknown) {\r\n    if (exception && (exception as any).__ribban_captured__) {\r\n        return true;\r\n    };\r\n\r\n    try {\r\n        addNonEnumerableProperty(exception as { [key: string]: unknown }, '__ribban_captured__', true)\r\n    } catch (error) {\r\n\r\n    };\r\n\r\n    return false;\r\n}\r\n\r\nexport function isMatchingPattern(\r\n    value: string,\r\n    pattern: RegExp | string,\r\n    requireExactStringMatch: boolean = false,\r\n): boolean {\r\n    if (!isString(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (isRegExp(pattern)) {\r\n        return pattern.test(value);\r\n    }\r\n    \r\n    if (isString(pattern)) {\r\n        return requireExactStringMatch ? value === pattern : value.includes(pattern);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function stringMatchesSomePattern(\r\n    testString: string,\r\n    patterns: Array<string | RegExp> = [],\r\n    requireExactStringMatch: boolean = false,\r\n): boolean {\r\n    return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\r\n}\r\n\r\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\r\n    if (typeof sampleRate === 'boolean') {\r\n        return Number(sampleRate);\r\n    }\r\n\r\n    const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\r\n    if (typeof rate !== 'number' || isNaN(rate)) {\r\n        logger.warn(\r\n            `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\r\n                sampleRate,\r\n            )} of type ${JSON.stringify(typeof sampleRate)}.`,\r\n        );\r\n\r\n        return undefined;\r\n    }\r\n\r\n    if (rate < 0 || rate > 1) {\r\n        logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\r\n        return undefined;\r\n    }\r\n\r\n    return rate;\r\n}\r\n\r\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\r\n    const exception = (event.exception = event.exception || {});\r\n    const values = (exception.values = exception.values || []);\r\n    const firstException = (values[0] = values[0] || {});\r\n    if (!firstException.value) {\r\n        firstException.value = value || '';\r\n    }\r\n    if (!firstException.type) {\r\n        firstException.type = type || 'Error';\r\n    }\r\n}\r\n\r\nfunction getFirstException(event: Event): Exception | undefined {\r\n    return event.exception && event.exception.values ? event.exception.values[0] : undefined;\r\n}\r\n\r\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\r\n    const firstException = getFirstException(event);\r\n    if (!firstException) {\r\n        return;\r\n    }\r\n\r\n    const defaultMechanism = { type: 'generic', handled: true };\r\n    const currentMechanism = firstException.mechanism;\r\n    firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\r\n\r\n    if (newMechanism && 'data' in newMechanism) {\r\n        const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\r\n        firstException.mechanism.data = mergedData;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}