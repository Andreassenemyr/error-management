{"version":3,"file":"logger.js","sources":["../../../src/utils/logger.ts"],"sourcesContent":["import { GLOBAL_OBJ } from \"../worldwide\";\r\n\r\nexport type ConsoleLevel = 'debug' | 'info' | 'warn' | 'error' | 'log' | 'assert' | 'trace';\r\n\r\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\r\n    'debug',\r\n    'info',\r\n    'warn',\r\n    'error',\r\n    'log',\r\n    'assert',\r\n    'trace',\r\n] as const;\r\n\r\ntype LoggerMethod = (...args: unknown[]) => void;\r\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\r\n\r\nexport const originalConsoleMethods: {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    [key in ConsoleLevel]?: (...args: any[]) => void;\r\n} = {};\r\n  \r\n\r\ninterface Logger extends LoggerConsoleMethods {\r\n    disable(): void;\r\n    enable(): void;\r\n    isEnabled(): boolean;\r\n}\r\n  \r\n/**\r\n * Temporarily disable Ribban console instrumentations.\r\n *\r\n * @param callback The function to run against the original `console` messages\r\n * @returns The results of the callback\r\n */\r\nexport function consoleSandbox<T>(callback: () => T): T {\r\n    if (!('console' in GLOBAL_OBJ)) {\r\n        return callback();\r\n    }\r\n  \r\n    const console = GLOBAL_OBJ.console as Console;\r\n    const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\r\n  \r\n    const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\r\n  \r\n    // Restore all wrapped console methods\r\n    wrappedLevels.forEach(level => {\r\n        const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\r\n        wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\r\n        console[level] = originalConsoleMethod;\r\n    });\r\n  \r\n    try {\r\n        return callback();\r\n    } finally {\r\n        // Revert restoration to wrapped state\r\n        wrappedLevels.forEach(level => {\r\n          console[level] = wrappedFuncs[level] as LoggerMethod;\r\n        });\r\n    }\r\n}\r\n\r\nfunction makeLogger(): Logger {\r\n    let enabled = false;\r\n    const logger: Partial<Logger> = {\r\n      enable: () => {\r\n        enabled = true;\r\n      },\r\n      disable: () => {\r\n        enabled = false;\r\n      },\r\n      isEnabled: () => enabled,\r\n    };\r\n  \r\n    CONSOLE_LEVELS.forEach(name => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        logger[name] = (...args: any[]) => {\r\n          if (enabled) {\r\n            consoleSandbox(() => {\r\n              GLOBAL_OBJ.console[name](`RIBBAN [${name}]:`, ...args);\r\n            });\r\n          }\r\n        };\r\n    });\r\n  \r\n    return logger as Logger;\r\n}\r\n  \r\nexport const logger = makeLogger();"],"names":[],"mappings":";;AAIO,MAAM,cAAc,GAA4B;AACvD,IAAI,OAAO;AACX,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,CAAE,EAAA;;MAKW,sBAAsB;;AAGnC,GAAI,GAAE;;AASN;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAI,QAAQ,EAAc;AACxD,IAAI,IAAI,EAAE,aAAa,UAAU,CAAC,EAAE;AACpC,QAAQ,OAAO,QAAQ,EAAE,CAAA;AACzB,KAAI;;AAEJ,IAAI,MAAM,OAAA,GAAU,UAAU,CAAC,OAAQ,EAAA;AACvC,IAAI,MAAM,YAAY,GAAkC,EAAE,CAAA;;AAE1D,IAAI,MAAM,gBAAgB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAE,EAAA;;AAE9D;AACA,IAAI,aAAa,CAAC,OAAO,CAAC,SAAS;AACnC,QAAQ,MAAM,qBAAsB,GAAE,sBAAsB,CAAC,KAAK,CAAE,EAAA;AACpE,QAAQ,YAAY,CAAC,KAAK,CAAA,GAAI,OAAO,CAAC,KAAK,CAAE,EAAA;AAC7C,QAAQ,OAAO,CAAC,KAAK,CAAA,GAAI,qBAAqB,CAAA;AAC9C,KAAK,CAAC,CAAA;;AAEN,IAAI,IAAI;AACR,QAAQ,OAAO,QAAQ,EAAE,CAAA;AACzB,cAAc;AACd;AACA,QAAQ,aAAa,CAAC,OAAO,CAAC,SAAS;AACvC,UAAU,OAAO,CAAC,KAAK,CAAA,GAAI,YAAY,CAAC,KAAK,CAAE,EAAA;AAC/C,SAAS,CAAC,CAAA;AACV,KAAI;AACJ,CAAA;;AAEA,SAAS,UAAU,GAAW;AAC9B,IAAI,IAAI,OAAQ,GAAE,KAAK,CAAA;AACvB,IAAI,MAAM,MAAM,GAAoB;AACpC,MAAM,MAAM,EAAE,MAAM;AACpB,QAAQ,OAAA,GAAU,IAAI,CAAA;AACtB,OAAO;AACP,MAAM,OAAO,EAAE,MAAM;AACrB,QAAQ,OAAA,GAAU,KAAK,CAAA;AACvB,OAAO;AACP,MAAM,SAAS,EAAE,MAAM,OAAO;AAC9B,KAAK,CAAA;;AAEL,IAAI,cAAc,CAAC,OAAO,CAAC,QAAQ;AACnC;AACA,QAAQ,MAAM,CAAC,IAAI,CAAA,GAAI,CAAC,GAAG,IAAI,KAAY;AAC3C,UAAU,IAAI,OAAO,EAAE;AACvB,YAAY,cAAc,CAAC,MAAM;AACjC,cAAc,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAA;AACpE,aAAa,CAAC,CAAA;AACd,WAAU;AACV,SAAS,CAAA;AACT,KAAK,CAAC,CAAA;;AAEN,IAAI,OAAO,MAAO,EAAA;AAClB,CAAA;;AAEa,MAAA,MAAA,GAAS,UAAU;;;;"}