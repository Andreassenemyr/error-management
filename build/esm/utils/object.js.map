{"version":3,"file":"object.js","sources":["../../../src/utils/object.ts"],"sourcesContent":["import { Primitive } from \"../scope\";\r\nimport { PolymorphicEvent } from \"../types/polymorhics\";\r\nimport { htmlTreeAsString } from \"./browser\";\r\nimport { logger } from \"./logger\";\r\n\r\nexport function dropUndefinedKeys<T>(inputValue: T): T {\r\n    const memoizationMap = new Map<unknown, unknown>();\r\n\r\n    return dropUndefinedKeysInner(inputValue, memoizationMap);\r\n};\r\n\r\nfunction dropUndefinedKeysInner<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\r\n    if (isRecord(inputValue)) {\r\n        const memoValue = memoizationMap.get(inputValue);\r\n        if (memoValue !== undefined) {\r\n            return memoValue as T;\r\n        };\r\n        \r\n        const returnValue: { [key: string]: unknown } = {};\r\n        memoizationMap.set(inputValue, returnValue);\r\n\r\n        for (const key of Object.keys(inputValue)) {\r\n            if (typeof inputValue[key] !== undefined) {\r\n                returnValue[key] = dropUndefinedKeysInner(inputValue[key], memoizationMap);\r\n            }\r\n        }\r\n\r\n        return returnValue as T;\r\n    }\r\n\r\n    if (Array.isArray(inputValue)) {\r\n        const memoValue = memoizationMap.get(inputValue);\r\n        if (memoValue !== undefined) {\r\n            return memoValue as T;\r\n        };\r\n\r\n        const returnValue: unknown[] = [];\r\n        memoizationMap.set(inputValue, returnValue);\r\n\r\n        inputValue.forEach((item: unknown) => {\r\n            returnValue.push(dropUndefinedKeysInner(item, memoizationMap)); \r\n        })\r\n\r\n        return returnValue as unknown as T;\r\n    };\r\n\r\n    return inputValue;\r\n};\r\n\r\nexport function isDOMException(wat: unknown): boolean {\r\n    return isBuiltin(wat, 'DOMException');\r\n}\r\n\r\nexport function isDOMError(wat: unknown): boolean {\r\n    return isBuiltin(wat, 'DOMError');\r\n}\r\n\r\nfunction isRecord(input: unknown): input is Record<string, unknown> {\r\n    if (!isPlainObject(input)) {\r\n        return false;\r\n    }\r\n  \r\n    try {\r\n        const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\r\n        return !name || name === 'Object';\r\n    } catch {\r\n        return true;\r\n    }\r\n};\r\n\r\nconst objectToString = Object.prototype.toString;\r\n\r\nfunction isBuiltin(wat: unknown, className: string): boolean {\r\n    return objectToString.call(wat) === `[object ${className}]`;\r\n};\r\n  \r\n\r\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\r\n    return isBuiltin(wat, 'Object');\r\n};\r\n\r\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\r\n    try {\r\n        Object.defineProperty(obj, name, {\r\n            // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\r\n            value: value,\r\n            writable: true,\r\n            configurable: true,\r\n        });\r\n    } catch (o_O) {\r\n        logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\r\n    }\r\n}\r\n\r\nexport function isPrimitive(wat: unknown): wat is Primitive {\r\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\r\n}\r\n\r\nexport function isError(wat: unknown): wat is Error {\r\n    switch (objectToString.call(wat)) {\r\n        case '[object Error]':\r\n        case '[object Exception]':\r\n        case '[object DOMException]':\r\n            return true;\r\n        default:\r\n            return isInstanceOf(wat, Error);\r\n    }\r\n}\r\n\r\nexport function isInstanceOf(wat: any, base: any): boolean {\r\n    try {\r\n        return wat instanceof base;\r\n    } catch (_e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isRegExp(wat: unknown): wat is RegExp {\r\n    return isBuiltin(wat, 'RegExp');\r\n}\r\n  \r\n\r\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\r\n    const keys = Object.keys(convertToPlainObject(exception));\r\n    keys.sort();\r\n  \r\n    if (!keys.length) {\r\n        return '[object has no keys]';\r\n    }\r\n  \r\n    if (keys[0].length >= maxLength) {\r\n        return keys[0].substring(0, maxLength);\r\n    }\r\n  \r\n    for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\r\n        const serialized = keys.slice(0, includedKeys).join(', ');\r\n        if (serialized.length > maxLength) {\r\n            continue;\r\n        }\r\n        if (includedKeys === keys.length) {\r\n            return serialized;\r\n        }\r\n        return serialized.substring(0, maxLength);\r\n    }\r\n  \r\n    return '';\r\n}\r\n\r\nexport function convertToPlainObject<V>(value: V):\r\n    | {\r\n        [ownProps: string]: unknown;\r\n        type: string;\r\n        target: string;\r\n        currentTarget: string;\r\n        detail?: unknown;\r\n      }\r\n    | {\r\n        [ownProps: string]: unknown;\r\n        message: string;\r\n        name: string;\r\n        stack?: string;\r\n      }\r\n    | V {\r\n    if (isError(value)) {\r\n        return {\r\n            message: value.message,\r\n            name: value.name,\r\n            stack: value.stack,\r\n            ...getOwnProperties(value),\r\n        };\r\n    } else if (isEvent(value)) {\r\n        const newObj: {\r\n          [ownProps: string]: unknown;\r\n          type: string;\r\n          target: string;\r\n          currentTarget: string;\r\n          detail?: unknown;\r\n        } = {\r\n          type: value.type,\r\n          target: serializeEventTarget(value.target),\r\n          currentTarget: serializeEventTarget(value.currentTarget),\r\n          ...getOwnProperties(value),\r\n        };\r\n      \r\n        if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\r\n          newObj.detail = value.detail;\r\n        }\r\n      \r\n        return newObj;\r\n    } else {\r\n      return value;\r\n    }\r\n}\r\n\r\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\r\n    if (typeof obj === 'object' && obj !== null) {\r\n        const extractedProps: { [key: string]: unknown } = {};\r\n        for (const property in obj) {\r\n            if (Object.prototype.hasOwnProperty.call(obj, property)) {\r\n                extractedProps[property] = (obj as Record<string, unknown>)[property];\r\n            }\r\n        }\r\n        return extractedProps;\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction serializeEventTarget(target: unknown): string {\r\n    try {\r\n        return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\r\n    } catch (_oO) {\r\n        return '<unknown>';\r\n    }\r\n}\r\n\r\n/**\r\n * Checks whether given value's type is an Element instance\r\n * {@link isElement}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isElement(wat: unknown): boolean {\r\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\r\n}\r\n  \r\n\r\n\r\n/**\r\n * Checks whether given value's type is ErrorEvent\r\n * {@link isErrorEvent}.\r\n *\r\n * @param wat A value to be checked.\r\n * @returns A boolean representing the result.\r\n */\r\nexport function isErrorEvent(wat: unknown): boolean {\r\n    return isBuiltin(wat, 'ErrorEvent');\r\n}  \r\n\r\nexport function isString(wat: unknown): wat is string {\r\n    return isBuiltin(wat, 'String');\r\n}\r\n\r\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\r\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\r\n}\r\n\r\n  \r\n"],"names":[],"mappings":"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"}