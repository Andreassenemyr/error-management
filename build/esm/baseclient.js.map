{"version":3,"file":"baseclient.js","sources":["../../src/baseclient.ts"],"sourcesContent":["import { Scope } from \"./index\";\r\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from \"./api\";\r\nimport { Client } from \"./client\";\r\nimport { HostComponent, createDSN } from \"./dsn\";\r\nimport { ClientOptions } from \"./options\";\r\nimport { Transport, TransportMakeRequestResponse } from \"./transport\";\r\nimport { logger } from \"./utils/logger\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { checkOrSetAlreadyCaught, parseSampleRate } from \"./utils/misc\";\r\nimport { Envelope, ErrorEvent, Event, EventEnvelope, EventHint, SeverityLevel } from \"./types\";\r\nimport { SyncPromise, isThenable, rejectedSyncPromise, resolvedSyncPromise } from \"./transport/syncpromise\";\r\nimport { RibbanError } from \"./utils/error\";\r\nimport { DataCategory, createEventEnvelope, createSessionEnvelope } from \"./envelope\";\r\nimport { prepareEvent } from \"./utils/prepare-event\";\r\nimport { Session, SessionAggregates } from \"./session\";\r\nimport { isPlainObject, isPrimitive } from \"./utils/object\";\r\nimport { getIsolationScope } from \"./current-scopes\";\r\n\r\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\r\n    protected readonly options: O;\r\n\r\n    protected readonly _dsn?: HostComponent;\r\n    protected readonly _transport?: Transport\r\n\r\n    protected _numProcessing: number;\r\n\r\n    constructor(options: O) {\r\n        this.options = options;\r\n        this._numProcessing = 0;\r\n\r\n        if (options.dsn) {\r\n            this._dsn = createDSN(options.dsn);\r\n        } else {\r\n            logger.warn('No DSN was provided, the client will not send any requests.')\r\n        }\r\n\r\n        console.log(this._dsn)\r\n\r\n        if (this._dsn) {\r\n            const url = getEnvelopeEndpointWithUrlEncodedAuth(\r\n                this._dsn,\r\n                this.options.tunnel\r\n            )\r\n\r\n            this._transport = options.transport({\r\n                tunnel: this.options.tunnel,\r\n                ...options.transportOptions,\r\n                url: url,\r\n            })\r\n        }\r\n    };\r\n    \r\n    public captureException(exception: any, hint?: EventHint | undefined, currentScope?: Scope | undefined): string {\r\n        const eventId = uuidv4();\r\n\r\n        if (checkOrSetAlreadyCaught(exception)) {\r\n            logger.log('An exception has been already caught, will not send it again');\r\n            return eventId;\r\n        }\r\n\r\n        console.log(\"Message in BaseClient: \" + exception.message);\r\n\r\n        const hintWithEventId = {\r\n            event_id: eventId,\r\n            ...hint,\r\n        };\r\n\r\n        this._process(this.eventFromException(exception, hintWithEventId).then((event) => \r\n            this._captureEvent(event, hintWithEventId, currentScope),\r\n        ));\r\n\r\n        console.log(hintWithEventId.event_id);\r\n\r\n        return hintWithEventId.event_id;\r\n    };\r\n\r\n    \r\n    sendSession(session: Session | SessionAggregates): void {\r\n        const env = createSessionEnvelope(session, this._dsn, this.options.tunnel);\r\n\r\n        this.sendEnvelope(env);\r\n    }\r\n\r\n    captureEvent(event: Event, hint?: EventHint | undefined, currentScope?: Scope | undefined): string {\r\n        const eventId = uuidv4();\r\n\r\n        if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\r\n            logger.log('An exception has been already caught, will not send it again');\r\n            return eventId;\r\n        }\r\n\r\n        const hintWithEventId = {\r\n            event_id: eventId,\r\n            ...hint,\r\n        };\r\n\r\n        this._process(this._captureEvent(event, hintWithEventId, currentScope));\r\n\r\n        return hintWithEventId.event_id;\r\n    };\r\n\r\n    public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\r\n\r\n    public getDsn(): HostComponent | undefined {\r\n        return this._dsn;\r\n    }\r\n\r\n    public getOptions(): O {\r\n        return this.options\r\n    }\r\n    \r\n\r\n    public sendEvent(event: Event, hint: EventHint = {}): void {\r\n        this.emit('beforeSendEvent', event, hint);\r\n\r\n        let envelope = createEventEnvelope(event, this._dsn, this.options.tunnel);\r\n\r\n        console.log(envelope)\r\n\r\n        const promise = this.sendEnvelope(envelope);\r\n        if (promise) {\r\n            promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse));\r\n        }\r\n    }\r\n\r\n    public sendEnvelope(envelope: Envelope): PromiseLike<TransportMakeRequestResponse> {\r\n        console.log('sending')\r\n\r\n        this.emit('beforeEnvelope', envelope);\r\n\r\n        if (this._isEnabled() && this._transport) {\r\n            console.log('Sending envelope');\r\n\r\n            return this._transport.send(envelope).then(null, (errorReason) => {\r\n                console.error(`Error while sending event: ${errorReason}`);\r\n                return errorReason;\r\n            })\r\n        }\r\n\r\n        console.error('Transport is disabled.', this._isEnabled(), this._transport);\r\n        return resolvedSyncPromise({});\r\n    }\r\n    \r\n    emit(hook: \"beforeEnvelope\", envelope: Envelope): void;\r\n    emit(hook: \"beforeSendEvent\", event: Event, hint?: EventHint | undefined): void;\r\n    emit(hook: \"preprocessEvent\", event: Event, hint?: EventHint | undefined): void;\r\n    emit(hook: \"afterSendEvent\", event: Event, sendResponse: TransportMakeRequestResponse): void;\r\n    emit(hook: \"flush\"): void;\r\n    emit(hook: \"close\"): void;\r\n    emit(hook: unknown, event?: unknown, sendResponse?: unknown): void {\r\n        \r\n    }\r\n\r\n    protected _prepareEvent(event: Event, hint: EventHint, currentScope?: Scope | undefined, isolationScope = getIsolationScope()): PromiseLike<Event | null> {\r\n        const options = this.getOptions();\r\n\r\n        this.emit('preprocessEvent', event, hint);\r\n\r\n        return prepareEvent(options, event, hint, currentScope, this).then((event) => {\r\n            if (event === null) {\r\n                return event;\r\n            }\r\n\r\n\r\n            return event;\r\n        })\r\n    };\r\n\r\n    captureMessage(message: string, level?: SeverityLevel | undefined, hint?: EventHint | undefined, currentScope?: Scope | undefined): string {\r\n        const hintWithEventId = {\r\n            event_id: uuidv4(),\r\n            ...hint,\r\n        };\r\n\r\n        const eventMessge = String(message);\r\n\r\n        const promisedEvent = isPrimitive(message) \r\n            ? this.eventFromException(eventMessge, hintWithEventId)\r\n            : this.eventFromException(eventMessge, hintWithEventId);\r\n\r\n        this._process(promisedEvent.then((event) => this._captureEvent(event, hintWithEventId, currentScope)));\r\n\r\n        return hintWithEventId.event_id;\r\n    }\r\n\r\n    captureSession(session: Session): void {\r\n        \r\n    }\r\n\r\n    getTransport(): Transport | undefined {\r\n        return this._transport;\r\n    }\r\n\r\n    close(timeout?: number | undefined): PromiseLike<boolean> {\r\n        return this.flush(timeout).then((result) => {\r\n            this.getOptions().enabled = false;\r\n            this.emit('close');\r\n            return result;\r\n        })\r\n    }\r\n\r\n    flush(timeout?: number | undefined): PromiseLike<boolean> {\r\n        const transport = this._transport;\r\n        if (transport) {\r\n            this.emit('flush');\r\n            return this._isClientDoneProcessing(timeout).then((done) => {\r\n                return transport.flush(timeout).then((transportFlushed) => done && transportFlushed);\r\n            });\r\n        } else {\r\n            return resolvedSyncPromise(true);   \r\n        }\r\n    }\r\n\r\n    init(): void {\r\n        if (this._isEnabled()) {\r\n            \r\n        }\r\n    }\r\n\r\n    protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\r\n        return new SyncPromise(resolve => {\r\n            let ticked: number = 0;\r\n            const tick: number = 1;\r\n            \r\n            const interval = setInterval(() => {\r\n                if (this._numProcessing == 0) {\r\n                    clearInterval(interval);\r\n                    resolve(true);\r\n                } else {\r\n                    ticked += tick;\r\n                    if (timeout && ticked >= timeout) {\r\n                        clearInterval(interval);\r\n                        resolve(false);\r\n                    }\r\n                }\r\n            }, tick);\r\n        });\r\n    }\r\n\r\n    protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\r\n        return this._processEvent(event, hint, scope).then((finalEvent) => {\r\n                return finalEvent.event_id;\r\n            },\r\n            (reason) => {\r\n                const ribbanError = reason as RibbanError;\r\n                if (ribbanError.logLevel === 'log') {\r\n                    console.log(\"LOG - \" +  ribbanError.message);\r\n                } else {\r\n                    console.log(\"ERROR - \" +  ribbanError);\r\n                }\r\n\r\n                return undefined;\r\n            },\r\n        );\r\n    }\r\n\r\n    protected _processEvent(event: Event, hint: EventHint, currentScope?: Scope): PromiseLike<Event> {\r\n        const options = this.getOptions();\r\n        const { sampleRate } = options;\r\n\r\n        const isError = isErrorEvent(event);\r\n        const eventType = event.type || 'error';\r\n        const beforeSendLabel = `before send for type \\`${eventType}\\``;\r\n\r\n        const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : parseSampleRate(sampleRate);\r\n        if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\r\n            logger.log(`Item Sampling decision: dropped event with sampleRate ${parsedSampleRate}`);\r\n            return rejectedSyncPromise(new RibbanError(\r\n                `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\r\n                'log',\r\n            ));\r\n        };\r\n\r\n        const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\r\n\r\n        return this._prepareEvent(event, hint, currentScope).then((prepared) => {\r\n            if (prepared === null) {\r\n                throw new RibbanError('An event processor returned null, will not send event.', 'log');\r\n            }\r\n\r\n            const isInternalException = hint.data && (hint.data as { __ribban__: boolean }).__ribban__ === true;\r\n            if (isInternalException) {\r\n                return prepared;\r\n            }\r\n\r\n            const result = processBeforeSend(options, prepared, hint);\r\n            return _validateBeforeSendResult(result, beforeSendLabel);\r\n        }).then((processed) => {\r\n            if (processed === null) {\r\n                throw new RibbanError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\r\n            }\r\n\r\n            console.log('SENDING EVENT ', processed.event_id)\r\n\r\n            this.sendEvent(processed, hint);\r\n            return processed;\r\n        }).then(null, (reason) => {\r\n            if (reason instanceof RibbanError) {\r\n                throw reason;\r\n            }\r\n        \r\n            this.captureException(reason, {\r\n                data: {\r\n                    __ribban__: true,\r\n                },\r\n                originalException: reason\r\n            });\r\n\r\n            throw new RibbanError(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`);\r\n        })\r\n    }\r\n    \r\n    on(hook: \"beforeEnvelope\", callback: (envelope: EventEnvelope) => void): void;\r\n    on(hook: \"beforeSendEvent\", callback: (event: Event, hint?: EventHint | undefined) => void): void;\r\n    on(hook: \"preprocessEvent\", callback: (event: Event, hint?: EventHint | undefined) => void): void;\r\n    on(hook: \"afterSendEvent\", callback: (event: Event, sendResponse: TransportMakeRequestResponse) => void): void;\r\n    on(hook: \"flush\", callback: () => void): void;\r\n    on(hook: \"close\", callback: () => void): void;\r\n    on(hook: string, callback: unknown): void {\r\n        \r\n    }\r\n\r\n    protected _isEnabled(): boolean {\r\n        return this.getOptions().enabled !== false && this._transport !== undefined;\r\n    }\r\n\r\n    protected _process<T>(promise: PromiseLike<T>): void {\r\n        this._numProcessing++;\r\n        void promise.then((value) => {\r\n            this._numProcessing--;\r\n            return value;\r\n        }, (reason) => {\r\n            this._numProcessing--;\r\n            return reason;\r\n        });\r\n    }\r\n}\r\n\r\nfunction _validateBeforeSendResult(\r\n    beforeSendResult: PromiseLike<Event | null> | Event | null,\r\n    beforeSendLabel: string\r\n): PromiseLike<Event | null> | Event | null {\r\n    const invalidValueError = `${beforeSendLabel} method has to return 'null' or a valid event.`;\r\n    if (isThenable(beforeSendResult)) {\r\n        return beforeSendResult.then((processed) => {\r\n            if (!isPlainObject(processed) && event !== null) {\r\n                throw new RibbanError(invalidValueError);\r\n            }\r\n\r\n            return processed;\r\n        }, (error) => {\r\n            throw new RibbanError(`${beforeSendLabel} rejected with ${error}`);\r\n        });\r\n    } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\r\n        throw new RibbanError(invalidValueError);\r\n    }\r\n\r\n    return beforeSendResult;\r\n};\r\n\r\nfunction processBeforeSend(\r\n    options: ClientOptions,\r\n    event: Event,\r\n    hint: EventHint,\r\n): PromiseLike<Event | null> | Event | null {\r\n    return event;\r\n}\r\n\r\n\r\nfunction isErrorEvent(event: Event): event is ErrorEvent {\r\n    return event.type === undefined;\r\n}"],"names":["uuidv4"],"mappings":"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"}