{"version":3,"file":"misc.js","sources":["../../../../../../src/utils/misc.ts"],"sourcesContent":["import { Event } from \"../types\";\r\nimport { Exception } from \"../types/exception\";\r\nimport { Mechanism } from \"../types/mechanism\";\r\nimport { logger } from \"./logger\";\r\nimport { addNonEnumerableProperty, isRegExp, isString } from \"./object\";\r\n\r\nexport function checkOrSetAlreadyCaught(exception: unknown) {\r\n    if (exception && (exception as any).__ribban_captured__) {\r\n        return true;\r\n    };\r\n\r\n    try {\r\n        addNonEnumerableProperty(exception as { [key: string]: unknown }, '__ribban_captured__', true)\r\n    } catch (error) {\r\n\r\n    };\r\n\r\n    return false;\r\n}\r\n\r\nexport function isMatchingPattern(\r\n    value: string,\r\n    pattern: RegExp | string,\r\n    requireExactStringMatch: boolean = false,\r\n): boolean {\r\n    if (!isString(value)) {\r\n        return false;\r\n    }\r\n\r\n    if (isRegExp(pattern)) {\r\n        return pattern.test(value);\r\n    }\r\n    \r\n    if (isString(pattern)) {\r\n        return requireExactStringMatch ? value === pattern : value.includes(pattern);\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function stringMatchesSomePattern(\r\n    testString: string,\r\n    patterns: Array<string | RegExp> = [],\r\n    requireExactStringMatch: boolean = false,\r\n): boolean {\r\n    return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\r\n}\r\n\r\nexport function parseSampleRate(sampleRate: unknown): number | undefined {\r\n    if (typeof sampleRate === 'boolean') {\r\n        return Number(sampleRate);\r\n    }\r\n\r\n    const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\r\n    if (typeof rate !== 'number' || isNaN(rate)) {\r\n        logger.warn(\r\n            `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\r\n                sampleRate,\r\n            )} of type ${JSON.stringify(typeof sampleRate)}.`,\r\n        );\r\n\r\n        return undefined;\r\n    }\r\n\r\n    if (rate < 0 || rate > 1) {\r\n        logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\r\n        return undefined;\r\n    }\r\n\r\n    return rate;\r\n}\r\n\r\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\r\n    const exception = (event.exception = event.exception || {});\r\n    const values = (exception.values = exception.values || []);\r\n    const firstException = (values[0] = values[0] || {});\r\n    if (!firstException.value) {\r\n        firstException.value = value || '';\r\n    }\r\n    if (!firstException.type) {\r\n        firstException.type = type || 'Error';\r\n    }\r\n}\r\n\r\nfunction getFirstException(event: Event): Exception | undefined {\r\n    return event.exception && event.exception.values ? event.exception.values[0] : undefined;\r\n}\r\n\r\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\r\n    const firstException = getFirstException(event);\r\n    if (!firstException) {\r\n        return;\r\n    }\r\n\r\n    const defaultMechanism = { type: 'generic', handled: true };\r\n    const currentMechanism = firstException.mechanism;\r\n    firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\r\n\r\n    if (newMechanism && 'data' in newMechanism) {\r\n        const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\r\n        firstException.mechanism.data = mergedData;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;AAoBO,SAAS,iBAAiB;AACjC,IAAI,KAAK;AACT,IAAI,OAAO;AACX,IAAI,uBAAuB,GAAY,KAAK;AAC5C,EAAW;AACX,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC1B,QAAQ,OAAO,KAAK,CAAA;AACpB,KAAI;;AAEJ,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC3B,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AAClC,KAAI;;AAEJ,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC3B,QAAQ,OAAO,uBAAA,GAA0B,KAAA,KAAU,OAAA,GAAU,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;AACpF,KAAI;;AAEJ,IAAI,OAAO,KAAK,CAAA;AAChB,CAAA;;AAGO,SAAS,wBAAwB;AACxC,IAAI,UAAU;AACd,IAAI,QAAQ,GAA2B,EAAE;AACzC,IAAI,uBAAuB,GAAY,KAAK;AAC5C,EAAW;AACX,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAQ,IAAG,iBAAiB,CAAC,UAAU,EAAE,OAAO,EAAE,uBAAuB,CAAC,CAAC,CAAA;AACpG;;;;"}